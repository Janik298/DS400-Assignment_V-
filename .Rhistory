"size" = 199)) %>% content
View(test)
all_venues_de <- for(i in 0:64) {
worker(i)
}
all_venues_de <- map(.x = 0:64, .f = worker)
View(all_venues_de)
View(all_venues_de)
all_venues_de_df <- map(.x = all_venues_de, .f = as.data.frame) %>%
bind_rows() %>%
select(name, city = name.1, postal_code = postalCode, address = line1, url, longitude = location.longitude, latitude = location.latitude)
View(venues_de_df)
View(venues_de_df)
map(.x = venues_de, as.data.frame) %>% # I now have transformed the the sublists into dataframes
bind_rows()
all_venues_de
all_venues_de_df <- map(.x = all_venues_de, .f = as.data.frame) %>%
bind_rows()
all_venues_de_df <- map(.x = all_venues_de, .f = as.data.frame) %>%
bind_rows()
all_venues_de_df <- map(.x = all_venues_de, .f = as_tibble)
all_venues_de_df <- map(.x = all_venues_de, .f = as_tibble(.name_repair = "unique"))
all_venues_de_df <- map(.x = all_venues_de, .f = as_tibble(... = , .name_repair = "unique"))
all_venues_de_df <- map(.x = all_venues_de, .f = as_tibble(x = all_venues_de, .name_repair = "unique"))
as_tibble(x = all_venues_de, .name_repair = "unique")
View(all_venues_de)
a <- as.data.frame(do.call(cbind, all_venues_de))
View(a)
a <- as.data.frame(do.call(rbind, all_venues_de))
View(a)
map(.x = all_venues_de, .f = as.data.frame)
a <- unlist(all_venues_de)
all_venues_de_df <- map(.x = a, .f = as.data.frame) %>%
bind_rows() %>%
select(name, city = name.1, postal_code = postalCode, address = line1, url, longitude = location.longitude, latitude = location.latitude)
all_venues_de_df <- map(.x = a, .f = as.data.frame) %>%
bind_rows()
View(all_venues_de)
View(all_venues_de_df)
View(venues_de_df)
View(event_venues_de)
View(all_venues_de)
all_venues_de_df <- map(.x = all_venues_de[[1]], .f = as.data.frame)
View(all_venues_de_df)
map(.x = all_venues_de[[1]], .f = as.data.frame) %>%
bind_rows() %>%
select(name, city = name.1, postal_code = postalCode, address = line1, url, longitude = location.longitude, latitude = location.latitude)
all_venues_de_df <- map(.x = all_venues_de[[1]], .f = as.data.frame) %>%
bind_rows() %>%
select(name, city = name.1, postal_code = postalCode, address = line1, url, longitude = location.longitude, latitude = location.latitude)
all_venues_de_df
View(all_venues_de_df)
df2 = data.frame(id = 33, pages=50, name = "java")
df2
df3 <- df %>%
rows_insert(df2)
df = data.frame(id=c(11,22),
pages=c(32,45),
name=c("spark","python"))
df2 = data.frame(id = 33, pages=50, name = "java")
df3 <- df %>%
rows_insert(df2)
df = data.frame(id=c(11,22),
pages=c(32,45),
name=c("spark","python"))
df
df2 = data.frame(id = 33, pages=50, name = "java")
df3
df %>%
rows_insert(df2)
df
df <- df %>%
rows_insert(df2)
df
df <- df %>%
rows_insert(df2)
df
df
df = data.frame(id=c(11,22),
pages=c(32,45),
name=c("spark","python"))
df <- rows_insert(df2)
df <- df %>% rows_insert(df2)
for (i in 1:65) {
temp <- map(.x = all_venues_de[[i]], .f = as.data.frame) %>%
bind_rows() %>%
select(name, city = name.1, postal_code = postalCode, address = line1, url, longitude = location.longitude, latitude = location.latitude)
all_venues_df <- all_venues_df %>% rows_insert(temp)
}
all_venues_de_df_1 <- map(.x = all_venues_de[[1]], .f = as.data.frame) %>%
bind_rows() %>%
select(name, city = name.1, postal_code = postalCode, address = line1, url, longitude = location.longitude, latitude = location.latitude)
all_venues_de_df_2 <- map(.x = all_venues_de[[2]], .f = as.data.frame) %>%
bind_rows() %>%
select(name, city = name.1, postal_code = postalCode, address = line1, url, longitude = location.longitude, latitude = location.latitude)
all_venues_de_df_1 %>% bind_rows(all_venues_de_df_2)
a <- all_venues_de_df_1 %>% bind_rows(all_venues_de_df_2)
View(a)
View(all_venues_de)
df_veneues_function <- function(x) {
temp <- map(.x = all_venues_de[[x]], .f = as.data.frame) %>%
bind_rows() %>%
select(name, city = name.1, postal_code = postalCode, address = line1, url, longitude = location.longitude, latitude = location.latitude)
all_venues_df <- all_venues_df %>% rows_insert(temp)
}
b <- map(.x = 1:65, .f = df_veneues_function())
df_veneues_function <- function(x) {
temp <- map(.x = all_venues_de[[x]], .f = as.data.frame) %>%
bind_rows() %>%
select(name, city = name.1, postal_code = postalCode, address = line1, url, longitude = location.longitude, latitude = location.latitude)
all_venues_df <- all_venues_df %>% bind_rows(temp)
}
b <- map(1:65, df_veneues_function)
c <- unlist(all_venues_de)
all_venues_de_df <- map(.x = all_venues_de[[5]], .f = as.data.frame) %>%
bind_rows() %>%
select(name, city = name.1, postal_code = postalCode, address = line1, url, longitude = location.longitude, latitude = location.latitude)
all_venues_de_df <- map(.x = all_venues_de[[37]], .f = as.data.frame) %>%
bind_rows() %>%
select(name, city = name.1, postal_code = postalCode, address = line1, url, longitude = location.longitude, latitude = location.latitude)
for (i in 1:65) {
temp <- map(.x = all_venues_de[[i]], .f = as.data.frame) %>%
bind_rows() %>%
select(name, city = name.1, postal_code = postalCode, address = line1, url, longitude = location.longitude, latitude = location.latitude)
temp <- temp %>% bind_rows()
}
for (i in 1:64) {
temp <- map(.x = all_venues_de[[i]], .f = as.data.frame) %>%
bind_rows() %>%
select(name, city = name.1, postal_code = postalCode, address = line1, url, longitude = location.longitude, latitude = location.latitude)
temp <- temp %>% bind_rows()
}
View(temp)
data.table::rbindlist(all_venues_de, fill = TRUE)
all_venues_de[1:64]
all_venues_de_df <- map(.x = all_venues_de[1:64], .f = as.data.frame) %>%
bind_rows() %>%
select(name, city = name.1, postal_code = postalCode, address = line1, url, longitude = location.longitude, latitude = location.latitude)
all_venues_de_df <- map(.x = all_venues_de[1:64], .f = as.data.frame)
View(all_venues_de_df)
View(all_venues_de)
a <- all_venues_de[[1:64]]
all_venues_de
View(venues_de)
all_venues_de <- map_dfr(.x = 0:64, .f = worker)
all_venues_de
all_venues_de_df <- map(.x = all_venues_de[[1]], .f = as.data.frame) %>%
bind_rows() %>%
select(name, city = name.1, postal_code = postalCode, address = line1, url, longitude = location.longitude, latitude = location.latitude)
View(all_venues_de_df)
for(i in 1:65) {
map(.x = all_venues_de[[i]], .f = as.data.frame) %>%
bind_rows() %>%
select(name, city = name.1, postal_code = postalCode, address = line1, url, longitude = location.longitude, latitude = location.latitude)
}
for(i in 1:64) {
map(.x = all_venues_de[[i]], .f = as.data.frame) %>%
bind_rows() %>%
select(name, city = name.1, postal_code = postalCode, address = line1, url, longitude = location.longitude, latitude = location.latitude)
}
for(i in 1:64) {
a <- map(.x = all_venues_de[[i]], .f = as.data.frame) %>%
bind_rows() %>%
select(name, city = name.1, postal_code = postalCode, address = line1, url, longitude = location.longitude, latitude = location.latitude)
}
View(a)
for(i in 1:64) {
a <- a %>% map(.x = all_venues_de[[i]], .f = as.data.frame) %>%
bind_rows() %>%
select(name, city = name.1, postal_code = postalCode, address = line1, url, longitude = location.longitude, latitude = location.latitude)
}
for(i in 1:64) {
b <- b %>% map(.x = all_venues_de[[i]], .f = as.data.frame) %>%
bind_rows() %>%
select(name, city = name.1, postal_code = postalCode, address = line1, url, longitude = location.longitude, latitude = location.latitude)
}
res <- function(x){
for(i in 1:x) {
a <- a %>% map(.x = all_venues_de[[i]], .f = as.data.frame) %>%
bind_rows() %>%
select(name, city = name.1, postal_code = postalCode, address = line1, url, longitude = location.longitude, latitude = location.latitude)
}
}
res(64)
all_venues_de_df <- data.frame()
for (i in 1:64) {
all_venues_de_df <- all_venues_de_df %>% map(.x = all_venues_de[[i]], .f = as.data.frame) %>%
bind_rows() %>%
select(name, city = name.1, postal_code = postalCode, address = line1, url, longitude = location.longitude, latitude = location.latitude)
}
for (i in 1:64) {
all_venues_de_df[i] <- map(.x = all_venues_de[[i]], .f = as.data.frame) %>%
bind_rows() %>%
select(name, city = name.1, postal_code = postalCode, address = line1, url, longitude = location.longitude, latitude = location.latitude)
}
View(all_venues_de_df)
for (i in 1:64) {
all_venues_de_df[i] <- map(.x = all_venues_de[[i]], .f = as.data.frame) %>%
bind_rows() %>%
select(name, city = name.1, postal_code = postalCode, address = line1, url, longitude = location.longitude, latitude = location.latitude)
}
for (i in 1:64) {
all_venues_de_df_3[i] <- map(.x = all_venues_de[[i]], .f = as.data.frame) %>%
bind_rows() %>%
select(name, city = name.1, postal_code = postalCode, address = line1, url, longitude = location.longitude, latitude = location.latitude)
}
df_34 <- map(.x = all_venues_de[[65]], .f = as.data.frame) %>%
bind_rows() %>%
select(name, city = name.1, postal_code = postalCode, address = line1, url, longitude = location.longitude, latitude = location.latitude)
df_34 <- map(.x = all_venues_de[[64]], .f = as.data.frame) %>%
bind_rows() %>%
select(name, city = name.1, postal_code = postalCode, address = line1, url, longitude = location.longitude, latitude = location.latitude)
as.data.frame(all_venues_de[[65]], check.names = FALSE)
as.data.frame(all_venues_de[[65]], check.names = FALSE, check.rows(TRUE))
as.data.frame(all_venues_de[[65]], check.names = FALSE, check.rows = TRUE)
as_tibble(all_venues_de[[65]])
as_tibble_col(all_venues_de[[65]])
map_dfr(all_venues_de[[65]])
map_dfr(all_venues_de[[65]], as.data.frame)
map(all_venues_de[[64]], as.data.frame)
map(all_venues_de[[65]], as.data.frame)
test <- GET("https://app.ticketmaster.com/discovery/v2/venues",
query = list("apikey" = api_key,
"countryCode" = "DE",
"locale" = "*",
"page" = 64,
"size" = 199)) %>% content
a <- map(test[[65]], as.data.frame)
View(test)
a <- map(test$_embedded, as.data.frame)
a <- map(test$`_embedded`, as.data.frame)
df_12 <- tibble()
a <- tibble()
df_12 <- tibble()
a <- tibble()
for (i in 1:64) {
a <- map(.x = all_venues_de[[i]], as.data.frame) %>%
bind_rows() %>%
select(name, city = name.1, postal_code = postalCode, address = line1, url, longitude = location.longitude, latitude = location.latitude)
df_12 <- rbind(df_12, a)
}
all_venues_de_df <- tibble()
temp <- tibble()
View(df_12)
all_venues_de_df <- tibble()
temp <- tibble()
for (i in 1:64) {
temp <- map(.x = all_venues_de[[i]], as.data.frame) %>%
bind_rows() %>%
select(name, city = name.1, postal_code = postalCode, address = line1, url, longitude = location.longitude, latitude = location.latitude)
all_venues_de_df <- rbind(all_venues_de_df, temp)
}
# There is a problem with the last page which I am going to fix by hand:
problem <- all_venues_de[[65]]
View(problem)
map(problem, as.data.frame)
map(problem[[1]], as.data.frame)
as.data.frame(problem[[1]])
# There is a problem with the last page which I am going to fix by hand:
last_page <- all_venues_de[[65]]
View(all_venues_de_df)
all_venues_de_df
tibble(last_page)
tibble(last_page[[1]])
as.data.frame(last_page[[1]])
as.tibble(last_page[[1]])
as.tibble(last_page[[1]])
as.tibble(last_page[1])
as.tibble(last_page[[1]])
as_tibble(last_page[[1]])
as.data.frame(last_page[[1]])
last_page_df <- tibble()
temp <- tibble()
temp_1 <- tibble()
as.data.frame(last_page[[1]]) %>% bind_rows()
temp_1 <- tibble()
for (i in 1:199) {
temp_1 <- as.data.frame(last_page[[i]]) %>% bind_rows() %>% select(name, city = name.1, postal_code = postalCode, address = line1, url, longitude = location.longitude, latitude = location.latitude)
all_venues_de_df <- rbind(all_venues_de_df, temp_1)
}
all_venues_de_df <- tibble()
temp <- tibble()
for (i in 1:64) {
temp <- map(.x = all_venues_de[[i]], as.data.frame) %>%
bind_rows() %>%
select(name, city = name.1, postal_code = postalCode, address = line1, url, longitude = location.longitude, latitude = location.latitude)
all_venues_de_df <- rbind(all_venues_de_df, temp)
}
all_venues_de_df <- tibble()
temp <- tibble()
for (i in 1:64) {
temp <- map(.x = all_venues_de[[i]], as.data.frame) %>%
bind_rows() %>%
select(name, city = name.1, postal_code = postalCode, address = line1, url, longitude = location.longitude, latitude = location.latitude)
all_venues_de_df <- rbind(all_venues_de_df, temp)
}
for (i in 1
temp_1 <- tibble()
temp_1 <- tibble()
a <- tibble()
for (i in 1:199) {
temp_1 <- as.data.frame(last_page[[i]])
a <- bind_rows(a, temp_1)
}
for (i in 1:198) {
temp_1 <- as.data.frame(last_page[[i]])
a <- bind_rows(a, temp_1)
}
for (i in 1:15) {
temp_1 <- as.data.frame(last_page[[i]])
a <- bind_rows(a, temp_1)
}
for (i in 1:50) {
temp_1 <- as.data.frame(last_page[[i]])
a <- bind_rows(a, temp_1)
}
temp_1 <- tibble()
a <- tibble()
for (i in 1:50) {
temp_1 <- as.data.frame(last_page[[i]])
a <- bind_rows(a, temp_1)
}
temp_1 <- tibble()
a <- tibble()
for (i in 1:45) {
temp_1 <- as.data.frame(last_page[[i]])
a <- bind_rows(a, temp_1)
}
temp_1 <- tibble()
a <- tibble()
temp_1 <- tibble()
a <- tibble()
for (i in 1:35) {
temp_1 <- as.data.frame(last_page[[i]])
a <- bind_rows(a, temp_1)
}
temp_1 <- tibble()
a <- tibble()
for (i in 1:40) {
temp_1 <- as.data.frame(last_page[[i]])
a <- bind_rows(a, temp_1)
}
temp_1 <- tibble()
a <- tibble()
for (i in 1:39) {
temp_1 <- as.data.frame(last_page[[i]])
a <- bind_rows(a, temp_1)
}
temp_1 <- tibble()
a <- tibble()
for (i in 1:38) {
temp_1 <- as.data.frame(last_page[[i]])
a <- bind_rows(a, temp_1)
}
temp_1 <- tibble()
a <- tibble()
for (i in 1:37) {
temp_1 <- as.data.frame(last_page[[i]])
a <- bind_rows(a, temp_1)
}
temp_1 <- tibble()
a <- tibble()
for (i in 1:36) {
temp_1 <- as.data.frame(last_page[[i]])
a <- bind_rows(a, temp_1)
}
View(all_venues_de)
temp_1 <- tibble()
for (i in 1:36) {
temp_1 <- as.data.frame(last_page[[i]])
all_venues_de_df <- bind_rows(all_venues_de_df, temp_1)
}
as.data.frame(last_page[[37]])
ggplot() +
borders("world", "Germany", colour = "black", fill = "grey90") +
theme_void() +
coord_quickmap() +
labs(title = "Event locations across Germany",
caption = "Source: ticketmaster.com") +
theme(title = element_text(size=8, face='bold'),
plot.caption = element_text(face = "italic"))
library(maps)
View(all_venues_de_df)
all_venues_de_df <- all_venues_de_df %>% select(name, city = name.1, postal_code = postalCode, address = line1, url, longitude = location.longitude, latitude = location.latitude)
View(all_venues_de_df)
all_venues_de_df <- tibble()
temp <- tibble()
for (i in 1:64) {
temp <- map(.x = all_venues_de[[i]], as.data.frame) %>%
bind_rows() %>%
select(name, city = name.1, postal_code = postalCode, address = line1, url, longitude = location.longitude, latitude = location.latitude)
all_venues_de_df <- rbind(all_venues_de_df, temp)
}
temp <- tibble()
all_venues_de_df <- tibble()
temp <- tibble()
for (i in 1:64) {
temp <- map(.x = all_venues_de[[i]], as.data.frame) %>%
bind_rows() %>%
select(name, city = name.1, postal_code = postalCode, address = line1, url, longitude = location.longitude, latitude = location.latitude)
all_venues_de_df <- rbind(all_venues_de_df, temp)
}
all_venues_de_df <- tibble()
temp <- tibble()
for (i in 1:64) {
temp <- map(.x = all_venues_de[[i]], as.data.frame) %>%
bind_rows() %>%
select(name, city = name.1, postal_code = postalCode, address = line1, url, longitude = location.longitude, latitude = location.latitude)
all_venues_de_df <- rbind(all_venues_de_df, temp)
}
for (i in 1:64) {
temp <- map(.x = all_venues_de[[i]], as.data.frame) %>%
bind_rows() %>%
select(name, city = name.1, postal_code = postalCode, address = line1, url, longitude = location.longitude, latitude = location.latitude)
all_venues_de_df <- rbind(all_venues_de_df, temp)
}
all_venues_de_df <- tibble()
temp <- tibble()
for (i in 1:64) {
temp <- map(.x = all_venues_de[[i]], as.data.frame) %>%
bind_rows() %>%
select(name, city = name.1, postal_code = postalCode, address = line1, url, longitude = location.longitude, latitude = location.latitude)
all_venues_de_df <- rbind(all_venues_de_df, temp)
}
temp <- map(.x = all_venues_de[[i]], as.data.frame) %>%
bind_rows() %>%
select(name, city = name.1, postal_code = postalCode, address = line1, url, longitude = location.longitude, latitude = location.latitude)
for (i in 1:64) {
temp <- map(.x = all_venues_de[[i]], as.data.frame) %>%
bind_rows() %>%
select(name, city = name.1, postal_code = postalCode, address = line1, url, longitude = location.longitude, latitude = location.latitude)
all_venues_de_df <- rbind(all_venues_de_df, temp)
}
all_venues_de <- map(.x = 0:64, .f = worker)
View(all_venues_de)
all_venues_de_df <- tibble()
temp <- tibble()
for (i in 1:64) {
temp <- map(.x = all_venues_de[[i]], as.data.frame) %>%
bind_rows() %>%
select(name, city = name.1, postal_code = postalCode, address = line1, url, longitude = location.longitude, latitude = location.latitude)
all_venues_de_df <- rbind(all_venues_de_df, temp)
}
worker <- function(page){
# Setting the rate Limit
Sys.sleep(0.3)
# Building the request and specifying everything but the pages
venues <- GET('https://app.ticketmaster.com/discovery/v2/venues',
query = list("apikey" = api_key,
"countryCode" = "DE",
"locale" = "*",
"page" = page,
"size" = 199)) # total elements are 12935 which is just 65*199 -> set the size to 199 to get only full pages
# Return the Information
return(content(venues)$`_embedded`$venues)
}
all_venues_de <- map(.x = 0:64, .f = worker)
library(jsonlite)
library(httr)
library(tidyverse)
library(rlist)
library(maps)
# Make a first request to get the event venues in Germany
event_venues_de <- GET("https://app.ticketmaster.com/discovery/v2/venues",
query = list("apikey" = api_key,
"countryCode" = "DE",
"locale" = "*",
"size" = 20)) %>% content # directly extracting the contents
source('api_key.R')
# Make a first request to get the event venues in Germany
event_venues_de <- GET("https://app.ticketmaster.com/discovery/v2/venues",
query = list("apikey" = api_key,
"countryCode" = "DE",
"locale" = "*",
"size" = 20)) %>% content # directly extracting the contents
# With the size argument I can choose the page size of the response
# Extracting the wanted items
venues_de <- event_venues_de$`_embedded`$venues # this is a list containing all the venues (at least the first page)
venues_de_df <- map(.x = venues_de, as.data.frame) %>% # I now have transformed the the sublists into dataframes
bind_rows() %>% # We now have a dataframe containing all information, but in an untidy way
select(name, city = name.1, postal_code = postalCode, address = line1, url, longitude = location.longitude, latitude = location.latitude)
View(venues_de)
View(venues_de)
venues_de_df
venues_de
map(.x = venues_de, as.data.frame)
# Loading the packages
library(jsonlite)
library(httr)
library(tidyverse)
library(rlist)
library(maps)
options(scipen=999)
git_repository_url <- "https://github.com/Janik298/DS400-Assignment_V-.git"
source('api_key.R')
# Make a first request to get the event venues in Germany
event_venues_de <- GET("https://app.ticketmaster.com/discovery/v2/venues",
query = list("apikey" = api_key,
"countryCode" = "DE",
"locale" = "*",
"size" = 20)) %>% content # directly extracting the contents
# With the size argument I can choose the page size of the response
# Extracting the wanted items
venues_de <- event_venues_de$`_embedded`$venues # this is a list containing all the venues (at least the first page)
venues_de_df <- map(.x = venues_de, as.data.frame) %>% # I now have transformed the the sublists into dataframes
bind_rows() %>% # We now have a dataframe containing all information, but in an untidy way
select(name, city = name.1, postal_code = postalCode, address = line1, url, longitude = location.longitude, latitude = location.latitude)
map(.x = venues_de, as.data.frame) %>% # I now have transformed the the sublists into dataframes
bind_rows() %>% # We now have a dataframe containing all information, but in an untidy way
select(name, city = name.1, postal_code = postalCode, address = line1, url, longitude = location.longitude, latitude = location.latitude)
map(.x = venues_de, as.data.frame) %>% # I now have transformed the the sublists into dataframes
bind_rows()
